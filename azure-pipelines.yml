# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  type: $(TYPE)
  project_id: $(PROJECT_ID)
  private_key_id: $(PRIVATE_KEY_ID)
  private_key: $(PRIVATE_KEY)
  client_email: $(CLIENT_EMAIL)
  client_id: $(CLIENT_ID)
  auth_uri: $(AUTH_URI)
  token_uri: $(TOKEN_URI)
  auth_provider_x509_cert_url: $(AUTH_PROVIDER_X509_CERT_URL)
  client_x509_cert_url: $(CLIENT_X509_CERT_URL)
  universe_domain: $(UNIVERSE_DOMAIN)

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: Docker@2
  inputs:
    containerRegistry: 'dotnetapigreenway'
    repository: 'dotnetapigreenway'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(Build.BuildId)
      latest